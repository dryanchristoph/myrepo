eval(function(p, a, c, k, e, r) {
	e = function(c) {
		return (c < a ? '' : e(parseInt(c / a)))
				+ ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c
						.toString(36))
	};
	if (!''.replace(/^/, String)) {
		while (c--)
			r[e(c)] = k[c] || e(c);
		k = [ function(e) {
			return r[e]
		} ];
		e = function() {
			return '\\w+'
		};
		c = 1
	}
	;
	while (c--)
		if (k[c])
			p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]);
	return p
}
		(
				'7 m(a){2.3=a;2.8=V.1E("1u");2.8.4.C="I: 1m; J: 1g;";2.k=V.1E("1u");2.k.4.C=2.8.4.C}m.l=E 6.5.22();m.l.1Y=7(){n c=2;n h=t;n f=t;n j;n b;n d,K;n i;n g=7(e){p(e.1v){e.1v()}e.2b=u;p(e.1t){e.1t()}};2.1s().24.G(2.8);2.1s().20.G(2.k);2.11=[6.5.9.w(V,"1o",7(a){p(f){a.s=j;i=u;6.5.9.r(c.3,"1n",a)}h=t;6.5.9.r(c.3,"1o",a)}),6.5.9.o(c.3.1P(),"1N",7(a){p(h&&c.3.1M()){a.s=E 6.5.1J(a.s.U()-d,a.s.T()-K);j=a.s;p(f){6.5.9.r(c.3,"1i",a)}F{d=a.s.U()-c.3.Z().U();K=a.s.T()-c.3.Z().T();6.5.9.r(c.3,"1e",a)}}}),6.5.9.w(2.k,"1d",7(e){c.k.4.1c="2i";6.5.9.r(c.3,"1d",e)}),6.5.9.w(2.k,"1D",7(e){c.k.4.1c=c.3.2g();6.5.9.r(c.3,"1D",e)}),6.5.9.w(2.k,"1C",7(e){p(i){i=t}F{g(e);6.5.9.r(c.3,"1C",e)}}),6.5.9.w(2.k,"1A",7(e){g(e);6.5.9.r(c.3,"1A",e)}),6.5.9.w(2.k,"1z",7(e){h=u;f=t;d=0;K=0;g(e);6.5.9.r(c.3,"1z",e)}),6.5.9.o(2.3,"1e",7(a){f=u;b=c.3.1b()}),6.5.9.o(2.3,"1i",7(a){c.3.O(a.s);c.3.D(2a)}),6.5.9.o(2.3,"1n",7(a){f=t;c.3.D(b)}),6.5.9.o(2.3,"29",7(){c.O()}),6.5.9.o(2.3,"28",7(){c.D()}),6.5.9.o(2.3,"27",7(){c.N()}),6.5.9.o(2.3,"26",7(){c.N()}),6.5.9.o(2.3,"25",7(){c.16()}),6.5.9.o(2.3,"23",7(){c.15()}),6.5.9.o(2.3,"21",7(){c.13()}),6.5.9.o(2.3,"1Z",7(){c.L()}),6.5.9.o(2.3,"1X",7(){c.L()})]};m.l.1W=7(){n i;2.8.1r.1q(2.8);2.k.1r.1q(2.k);1p(i=0;i<2.11.1V;i++){6.5.9.1U(2.11[i])}};m.l.1T=7(){2.15();2.16();2.L()};m.l.15=7(){n a=2.3.z("Y");p(H a.1S==="P"){2.8.W=a;2.k.W=2.8.W}F{2.8.G(a);a=a.1R(u);2.k.G(a)}};m.l.16=7(){2.k.1Q=2.3.1O()||""};m.l.L=7(){n i,q;2.8.S=2.3.z("R");2.k.S=2.8.S;2.8.4.C="";2.k.4.C="";q=2.3.z("q");1p(i 1L q){p(q.1K(i)){2.8.4[i]=q[i];2.k.4[i]=q[i]}}2.1l()};m.l.1l=7(){2.8.4.I="1m";2.8.4.J="1g";p(H 2.8.4.B!=="P"){2.8.4.1k="1j(B="+(2.8.4.B*1I)+")"}2.k.4.I=2.8.4.I;2.k.4.J=2.8.4.J;2.k.4.B=0.1H;2.k.4.1k="1j(B=1)";2.13();2.O();2.N()};m.l.13=7(){n a=2.3.z("X");2.8.4.1h=-a.x+"v";2.8.4.1f=-a.y+"v";2.k.4.1h=-a.x+"v";2.k.4.1f=-a.y+"v"};m.l.O=7(){n a=2.1G().1F(2.3.Z());2.8.4.12=a.x+"v";2.8.4.M=a.y+"v";2.k.4.12=2.8.4.12;2.k.4.M=2.8.4.M;2.D()};m.l.D=7(){n a=(2.3.z("14")?-1:+1);p(H 2.3.1b()==="P"){2.8.4.A=2h(2.8.4.M,10)+a;2.k.4.A=2.8.4.A}F{2.8.4.A=2.3.1b()+a;2.k.4.A=2.8.4.A}};m.l.N=7(){p(2.3.z("1a")){2.8.4.Q=2.3.2f()?"2e":"1B"}F{2.8.4.Q="1B"}2.k.4.Q=2.8.4.Q};7 19(a){a=a||{};a.Y=a.Y||"";a.X=a.X||E 6.5.2d(0,0);a.R=a.R||"2c";a.q=a.q||{};a.14=a.14||t;p(H a.1a==="P"){a.1a=u}2.1y=E m(2);6.5.18.1x(2,1w)}19.l=E 6.5.18();19.l.17=7(a){6.5.18.l.17.1x(2,1w);2.1y.17(a)};',
				62,
				143,
				'||this|marker_|style|maps|google|function|labelDiv_|event|||||||||||eventDiv_|prototype|MarkerLabel_|var|addListener|if|labelStyle|trigger|latLng|false|true|px|addDomListener|||get|zIndex|opacity|cssText|setZIndex|new|else|appendChild|typeof|position|overflow|cLngOffset|setStyles|top|setVisible|setPosition|undefined|display|labelClass|className|lng|lat|document|innerHTML|labelAnchor|labelContent|getPosition||listeners_|left|setAnchor|labelInBackground|setContent|setTitle|setMap|Marker|MarkerWithLabel|labelVisible|getZIndex|cursor|mouseover|dragstart|marginTop|hidden|marginLeft|drag|alpha|filter|setMandatoryStyles|absolute|dragend|mouseup|for|removeChild|parentNode|getPanes|stopPropagation|div|preventDefault|arguments|apply|label|mousedown|dblclick|none|click|mouseout|createElement|fromLatLngToDivPixel|getProjection|01|100|LatLng|hasOwnProperty|in|getDraggable|mousemove|getTitle|getMap|title|cloneNode|nodeType|draw|removeListener|length|onRemove|labelstyle_changed|onAdd|labelclass_changed|overlayMouseTarget|labelanchor_changed|OverlayView|labelcontent_changed|overlayImage|title_changed|labelvisible_changed|visible_changed|zindex_changed|position_changed|1000000|cancelBubble|markerLabels|Point|block|getVisible|getCursor|parseInt|pointer'
						.split('|'), 0, {}))

var map;

var mapOptions = {
	center : new google.maps.LatLng(-7.03070, 110.41749),
	zoom : 14,
	mapTypeId : google.maps.MapTypeId.ROADMAP
};/*
var newLatlng;
var marker = new Array();
var infowindow = new Array();
var markers = [];
var temp1 = [];
var temp2 = [];
var tukar = [];
var bool;
var count = 0;
var bounds;
var oms;
var iw = new google.maps.InfoWindow();
function myMarker(options) {
	if (!options.labelAnchor) {
		options.labelAnchor = new google.maps.Point(30, 50);
	}
	if (!options.labelClass) {
		options.labelClass = "labels";
	}
	options.map = map;
	return new MarkerWithLabel(options);
}*/

function initialize() {
	map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
	
	/*oms = new OverlappingMarkerSpiderfier(map,
	        {markersWontMove: true, markersWontHide: true});
	// cekServer();
	oms.addListener('click', function(test) {
		iw.setContent(test.desc);
        iw.open(map, test);
      });
	 var input = *//** @type {HTMLInputElement} *//*(document.getElementById('target'));
	  var searchBox = new google.maps.places.SearchBox(input);
	  var markers = [];

	  google.maps.event.addListener(searchBox, 'places_changed', function() {
	    var places = searchBox.getPlaces();

	    for (var i = 0, marker; marker = markers[i]; i++) {
	      marker.setMap(null);
	    }

	    markers = [];
	    var bounds2 = new google.maps.LatLngBounds();
	    for (var i = 0, place; place = places[i]; i++) {
	      var image = {
	        url: place.icon,
	        size: new google.maps.Size(71, 71),
	        origin: new google.maps.Point(0, 0),
	        anchor: new google.maps.Point(17, 34),
	        scaledSize: new google.maps.Size(25, 25)
	      };
	      bounds2.extend(place.geometry.location);
	    }

	    map.fitBounds(bounds2);
	    map.setZoom(14);
	  });

	  google.maps.event.addListener(map, 'bounds_changed', function() {
	    var bounds2 = map.getBounds();
	    searchBox.setBounds(bounds2);
	  });

	markerPLN();
	newMarker();
	// run('Semua');
	
	 * var marker2 = new myMarker({ position: new google.maps.LatLng(20,20),
	 * draggable: false, labelContent: "second" });
	 */
	
}

google.maps.event.addDomListener(window, 'load', initialize);

function markerPLN() {
	markerKantor = new myMarker({
		position : new google.maps.LatLng(-7.03070, 110.41749),
		draggable : false,
		optimized : false,
		map : map,
		labelContent : "Kantor PLN",
		// labelAnchor: new google.maps.Point(30, 0),
		labelClass : "labels", // the CSS class for the label
		labelAnchor : new google.maps.Point(50, 100),
		zIndex : -100,
		labelStyle : {
			opacity : 0.75
		}
	});
	markerKantor.setIcon('./images/office.png');
	var contentString = '<h3><b> Kantor PLN<br>Distribusi Jateng & DIY</b></h3><br><img src="./images/kantor.png" width="160px"><h4>'
			+ 'Jl. Teuku Umar No. 47 Semarang</h4>';
	infowindow = new google.maps.InfoWindow({
		content : contentString,
		maxWidth : 300
	});
	google.maps.event.addListener(markerKantor, 'click', function() {
		infowindow.open(map, markerKantor);
	});	
}
var bool = false;
function newMarker() {	
	bounds = new google.maps.LatLngBounds();
	bounds.extend(new google.maps.LatLng(-7.03070, 110.41749));
	updateMarker();
	setTimeout(function() {
		for ( var i = 0; i < markers.length; i++) {
			createMarker(i);
		}
	}, 100);
	
	
	function createMarker(i) {
		var lat = parseFloat(markers[i][0]);
		var lng = parseFloat(markers[i][1]);
		var sinyal = markers[i][3];
		var plat = markers[i][2];
		var merk = markers[i][4];
		var warna = markers[i][5];
		var speed = markers[i][6];
		var status = markers[i][8];
		var lastResponse = markers[i][7];

		if (typeof (marker[plat]) == "undefined" || marker[plat] == null) {
			marker[plat] = new myMarker({
				position : new google.maps.LatLng(lat, lng),
				draggable : false,
				optimized : false,
				map : map,
				labelContent : plat,
				// labelAnchor: new google.maps.Point(30, 0),
				labelClass : "labels", // the CSS class for the label
				labelStyle : {
					opacity : 0.75
				}
			});			
		}		
		
		var jarak = new Array();
		jarak[plat] = (google.maps.geometry.spherical.computeDistanceBetween(
				new google.maps.LatLng(lat, lng), markerKantor.position) / 1000)
				.toFixed(2);

		if (tukar[plat] == true) {
			tukar[plat] = false;
			temp1[plat] = [ lat, lng, sinyal, plat, merk, warna, speed,
					lastResponse, jarak[plat], status ];
		} else {
			tukar[plat] = true;
			temp2[plat] = [ lat, lng, sinyal, plat, merk, warna, speed,
					lastResponse, jarak[plat], status ];
		}
		bounds.extend(marker[plat].position);
		
		var waktu;
		var date;
		var time;
		if (lastResponse != "") {
			waktu = lastResponse.split(" ");
			date = waktu[0];
			time = waktu[1];
		} else {
			date = "-";
			time = "";
		}
		marker[plat].desc = '<h3><b>' + merk + '</b></h3><br><h4>' + plat
				+ '</h4><br><div align="left"><label id="info">Warna</label>: ' + warna
				+ '<br><label id="info">Kecepatan</label>: ' + speed
				+ ' km/ jam <br><label id="info">Jarak dengan kantor</label>: '
				+ jarak[plat] + ' km<br><label id="info">Status</label>: '+status+'<br><label id="info">Response terakhir</label>: '
				+ date + '<br><label id="info"></label>&nbsp;&nbsp;'
				+ time + '</div>';
				//'<button style="width: 150px;" onClick="buatTujuan(plat);" title="Permohonan Kendaraan"><center>Permohonan Kendaraan</center></button>';

		if (sinyal == 'V')
			marker[plat].setIcon('./images/grey-dot.png');
		else
			marker[plat].setIcon('./images/blueblink.gif');
		/*if (typeof (infowindow[plat]) == "undefined" && infowindow[plat] == null) {
			infowindow[plat] = new google.maps.InfoWindow({
				content : contentString,
				maxWidth : 100
			});*/		
			/*oms.addListener('spiderfy', function(markers) {
				infowindow[plat].close();
		     });*/
			//}
			/*google.maps.event.addListener(marker[plat], 'click', function() {
				infowindow[plat].open(map, marker[plat]);
			});*/
		//alert(temp2[plat].compare(temp1[plat]));
		if (temp2[plat].compare(temp1[plat]) == false) {
			marker[plat].setPosition(new google.maps.LatLng(lat, lng));
			iw.setContent(marker[plat].desc);
			myApp.oTable.fnDraw(false);
		}
		oms.addMarker(marker[plat]);
	}
}
/*function buatTujuan(plat){
	bool=true;
	marker[plat].desc = '<h3><b>' + merk + '</b></h3><br><h4>' + plat
	+ '</h4><br><div align="left"><label id="info">Warna</label>: ' + warna
	+ '<br><label id="info">Kecepatan</label>: ' + speed
	+ ' km/ jam <br><label id="info">Jarak dengan kantor</label>: '
	+ jarak[plat] + ' km<br><label id="info">Status</label>: '+status+'<br><label id="info">Response terakhir</label>: '
	+ date + '<br><label id="info"></label>&nbsp;&nbsp;'
	+ time + '</div>'+
	'<button style="width: 150px;" onClick="buatTujuan(plat);" title="Permohonan Kendaraan"><center>Permohonan Kendaraan</center></button>';

}*/
function updateMarker() {
	if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
		xmlhttp = new XMLHttpRequest();
	} else {// code for IE6, IE5
		xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
	}
	xmlhttp.onreadystatechange = function() {
		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
			hasil = xmlhttp.responseText.substring(0,
					xmlhttp.responseText.length - 1);
			result = hasil.split("|");

			// alert(result[1]);
			for ( var i = 0; i <= (result.length - 1); i++) {
				markers[i] = result[i].split(",");
			}
		}
	};
	xmlhttp.open("POST", "./fungsi/AJAX/updateMarker.php", true);
	xmlhttp.send();
}
/*function updateMarker(){
	
	ajaxCaller("./fungsi/updateMarker.php");
	
}*/




Array.prototype.compare = function(array) {
	// if the other array is a falsy value, return
	if (!array)
		return false;

	// compare lengths - can save a lot of time
	if (this.length != array.length)
		return false;

	for ( var i = 0; i < this.length; i++) {
		// Check if we have nested arrays
		if (this[i] instanceof Array && array[i] instanceof Array) {
			// recurse into the nested arrays
			if (!this[i].compare(array[i]))
				return false;
		} else if (this[i] != array[i]) {
			// Warning - two different object instances will never be equal:
			// {x:20} != {x:20}
			return false;
		}
	}
	return true;
};

function ajaxFunction()
{
	var myAjax;
try
    {// Opera 8.0+, Firefox, Safari
    myAjax = new XMLHttpRequest();
    }
catch (e)
    {// Internet Explorer Browsers
    try
        {
        myAjax = new ActiveXObject("Msxml2.XMLHTTP");
        }
    catch (e)
        {
        try
            {
            myAjax = new ActiveXObject("Microsoft.XMLHTTP");
            }
        catch (e)
            {// Something went wrong
            alert("browser too old");
            return false;
            }
        }
    }
	return myAjax;
}

function ajaxCaller(url)
{
	var myAjax = ajaxFunction();
    myAjax.open("POST",url,true);
    myAjax.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    //myAjax.setRequestHeader("Content-length", params.length);
    myAjax.setRequestHeader("Connection", "close");
    
    myAjax.onreadystatechange=function()
      {
      if (myAjax.readyState==4 && myAjax.status==200)
        {
        response=myAjax.responseText;        
        if(response.length>10){
        	
        	hasil = response.substring(0,
        			response.length - 1);
        	result = hasil.split("|");
        	// alert(result[1]);
        	for ( var i = 0; i <= (result.length - 1); i++) {
        		markers[i] = result[i].split(",");
        	}
        } else {
        	if (response == "true") {
				bool = true;
			} else if (response == "false") {
				bool = false;
			}
        	//alert(bool);
        }
        }
      };
      alert('tes');
    myAjax.send();
}

function scrollBawah(){
	$('html, body').animate({
		scrollTop: $("#dynamic").offset().top
	}, 1000);
 }
function scrollCanvas(){
	$('html, body').animate({
		scrollTop: $("#map_canvas").offset().top
	}, 1000);
 }